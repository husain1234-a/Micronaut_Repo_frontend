micronaut:
  application:
    name: user-management
  email:
    from:
      email: en20cs301184@medicaps.ac.in
      name: Ishita Porwal
  sendgrid:
    api-key: ${SENDGRID_API_KEY:}
    from-email: ${SENDGRID_FROM_EMAIL:micronaut.yash@gmail.com}
  notifications:
    admin-email: admin@yash.com
    reset-password-url: http://localhost/reset-password
    application-name: User Management System
  router:
    static-resources:
      swagger:
        paths: classpath:META-INF/swagger
        mapping: /swagger/**
      swagger-ui:
        paths: classpath:META-INF/swagger/views/swagger-ui
        mapping: /swagger-ui/**
  server:
    port: 8080
    cors:
      enabled: true
  data:
    jdbc:
      repositories:
        enabled: true
      default:
        enabled: true
        dialect: POSTGRES
        schema-generate: CREATE
        schema-generate-sources: CLASSES
        schema-generate-databases: true
        schema-generate-create: true
        schema-generate-drop: true
        schema-generate-create-sources: CLASSES
        schema-generate-drop-sources: CLASSES
  security:
    enabled: true
    token:
      jwt:
        enabled: true
        signatures:
          secret:
            generator:
              secret: "your-secret-key-here-make-it-long-and-secure-in-production"
    authentication: bearer
    intercept-url-map:
      - pattern: /api/auth/login
        access:
          - isAnonymous()
      - pattern: /api/auth/logout
        access:
          - isAuthenticated()
      - pattern: /api/**
        access:
          - isAuthenticated()
      - pattern: /swagger/**
        access:
          - isAnonymous()
      - pattern: /swagger-ui/**
        access:
          - isAnonymous()
      - pattern: /v3/api-docs/**
        access:
          - isAnonymous()
    endpoints:
      login:
        enabled: false
      logout:
        enabled: false

datasources:
  default:
    url: "jdbc:postgresql://localhost:5432/usermanagement"
    username: "postgres"
    password: "admin123"
    driverClassName: org.postgresql.Driver
    dialect: POSTGRES
    schema-generate:
      create: true
      use-foreign-keys: true
    db-type: postgres
    poolName: HikariPool
    maximumPoolSize: 10
    minimumIdle: 5
    idleTimeout: 300000
    connectionTimeout: 20000
    maxLifetime: 1200000
    validationQuery: "SELECT 1"
    testOnBorrow: true
    testWhileIdle: true
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 300000
    jmxEnabled: true

# DynamoDB Configuration
dynamodb:
  endpoint: "http://localhost:8000"

# AWS Configuration
aws:
  region: ${AWS_REGION:us-east-1}
  credentials:
    access-key-id: ${ACCESS_KEY:dummy}
    secret-access-key: ${SECRET_KEY:dummy}

swagger:
  title: User Management API
  version: 1.0.0
  description: API for managing users and their notifications

openapi:
  title: User Management API
  version: 1.0
  description: API for managing users and their addresses